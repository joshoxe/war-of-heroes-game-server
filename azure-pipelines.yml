trigger:

- main

pool:
  vmImage: ubuntu-latest

variables:
  - group: Deployment

stages:
  - stage: Build
    jobs:
      - job: BuildServer
        steps:
          - checkout: self
          - task: NodeTool@0
            displayName: install node
            inputs:
              versionSpec: '6.x'
              checkLatest: true
          - script: |
              npm install
              npm run build --if-present
            displayName: 'npm install, build'
          - task: ArchiveFiles@2
            displayName: archive server build
            inputs:
              rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
              includeRootFolder: false
              archiveType: 'zip'
              archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
              replaceExistingArchive: true
          - task: PublishBuildArtifacts@1
            displayName: publish artifact
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'drop'
              publishLocation: 'Container'
              
  - stage: Deploy
    jobs:
      - job: DeployServer
        steps:
        - script: |
            terraform init
            terraform plan
            terraform apply -auto-approve
          workingDirectory: "$(System.DefaultWorkingDirectory)/Deployment"
          env:
            ARM_SUBSCRIPTION_ID: $(SUBSCRIPTION-ID)
            ARM_TENANT_ID: $(TERRAFORM-TENANT-ID)      
            ARM_ACCESS_KEY: $(TF-ACCESS-KEY)        
            ARM_CLIENT_ID: $(TERRAFORM-CLIENT-ID)
            ARM_CLIENT_SECRET: $(TERRAFORM-CLIENT-SECRET)
        - task: DownloadPipelineArtifact@2
          inputs:
              buildType: "current"
              artifactName: "drop"
              targetPath: "$(System.DefaultWorkingDirectory)"
              
        - task: AzureWebApp@1
          displayName: 'Azure Web App Deploy: nodejs-cicd-16353'
          inputs:
              azureSubscription: warOfHeroes
              appType: webAppLinux
              appName: warOfHeroesServer
              runtimeStack: 'NODE|10.10'
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
              startUpCommand: 'npm run start'